{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","input","label","createElement","className","htmlFor","id","textContent","name","placeholder","convertString","parentNode","append","string","stringConverted","char","toUpperCase","indexOf","slice","toLowerCase"],"mappings":";AAAA,aA0BC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxBD,IAwBC,EAxBKA,EAASC,SAASC,iBAAiB,SAErBF,EAAAA,EAAAA,GAsBnB,IAtB2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBG,IAAAA,EAAiB,EAAA,MACpBC,EAAQH,SAASI,cAAc,SAErCD,EAAME,UAAY,CAAC,eACnBF,EAAMG,QAAUJ,EAAMK,GACtBJ,EAAMK,YAAcN,EAAMO,KAC1BP,EAAMQ,YAAcC,EAAcT,EAAMO,MACxCP,EAAMU,WAAWC,OAAOV,IAezB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAZD,SAASQ,EAAcG,GACjBC,IADyB,EACzBA,EAAkB,GAEHD,EAAAA,EAAAA,GAHU,IAGF,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAhBE,IAAAA,EAAgB,EAAA,MACrBA,IAASA,EAAKC,eAA4C,IAA3BH,EAAOI,QAAQ,UAChDH,GAAmB,KAErBA,GAAmBC,GAPQ,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAUtBD,OAAAA,EAAgB,GAAGE,cACtBF,EAAgBI,MAAM,GAAGC","file":"main.16716913.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nfor (const input of inputs) {\n  const label = document.createElement('label');\n\n  label.className = ['field-label'];\n  label.htmlFor = input.id;\n  label.textContent = input.name;\n  input.placeholder = convertString(input.name);\n  input.parentNode.append(label);\n}\n\nfunction convertString(string) {\n  let stringConverted = '';\n\n  for (const char of string) {\n    if (char === char.toUpperCase() && string.indexOf('char') !== 0) {\n      stringConverted += ' ';\n    }\n    stringConverted += char;\n  }\n\n  return stringConverted[0].toUpperCase()\n    + stringConverted.slice(1).toLowerCase();\n}\n"]}